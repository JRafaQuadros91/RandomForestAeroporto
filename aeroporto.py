# -*- coding: utf-8 -*-
"""Aeroporto.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/128WD_Tr8JUNtNCNMR7KCKZM5p-XjRfFy
"""

import pandas as pd
import numpy as np
import csv
import json
import matplotlib.pyplot as plt
import glob


from google.colab import drive
drive.mount('/content/drive')

#database_path = '/drive/Shareddrives/Tcc2021Rafael/data/ANAC/*.csv' #caminho da base de dados

#base = pd.read_csv('/drive/Shareddrives/Tcc2021Rafael/data/ANAC/BaseAnac2000-2020.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')


'''
bases = []
count = 0
for name in glob.glob(database_path):
  print(f'Processando arq {count} - {name}')
  count = count+1
  df_tmp = pd.read_csv(name,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')

  bases.append(df_tmp[df_tmp['ICAO Aer√≥dromo Origem']=='SBCA'].copy())

  del df_tmp

base = pd.concat(bases, ignore_index=True)
'''




bases = [] 
#Bases do ano de 2014 entre os meses 6 e 7 nao constam no site da ANAC
#Carregando bases e concatenando bases 2000 
#-------------------------------------------------------------------------------------------------- SALVEI TUDO EM UM UNICO ARQUIVO DEPOIS
bdAnac20001 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_20001.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20001)
bdAnac20002 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_20002.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20002)
bdAnac20003 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_20003.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20003)
bdAnac20004 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_20004.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20004)
bdAnac20005 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_20005.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20005)
bdAnac20006 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_20006.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20006)
bdAnac20007 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_20007.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20007)
bdAnac20008 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_20008.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20008)
bdAnac20009 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_20009.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20009)
bdAnac200010 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_200010.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200010)
bdAnac200011 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_200011.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200011)
bdAnac200012 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2000/VRA_200012.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200012)

#Carregando bases e concatenando bases 2001 

bdAnac20011 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_20011.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20011)
bdAnac20012 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_20012.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20012)
bdAnac20013 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_20013.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20013)
bdAnac20014 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_20014.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20014)
bdAnac20015 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_20015.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20015)
bdAnac20016 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_20016.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20016)
bdAnac20017 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_20017.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20017)
bdAnac20018 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_20018.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20018)
bdAnac20019 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_20019.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20019)
bdAnac200110 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_200110.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200110)
bdAnac200111 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_200111.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200111)
bdAnac200112 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2001/VRA_200112.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200112)

#Carregando bases e concatenando bases 2002 

bdAnac20021 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_20021.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20021)
bdAnac20022 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_20022.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20022)
bdAnac20023 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_20023.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20023)
bdAnac20024 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_20024.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20024)
bdAnac20025 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_20025.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20025)
bdAnac20026 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_20026.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20026)
bdAnac20027 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_20027.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20027)
bdAnac20028 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_20028.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20028)
bdAnac20029 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_20029.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20029)
bdAnac200210 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_200210.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200210)
bdAnac200211 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_200211.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200211)
bdAnac200212 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2002/VRA_200212.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200212)

#Carregando bases e concatenando bases 2003 

bdAnac20031 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_20031.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20031)
bdAnac20032 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_20032.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20032)
bdAnac20033 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_20033.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20033)
bdAnac20034 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_20034.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20034)
bdAnac20035 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_20035.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20035)
bdAnac20036 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_20036.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20036)
bdAnac20037 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_20037.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20037)
bdAnac20038 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_20038.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20038)
bdAnac20039 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_20039.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20039)
bdAnac200310 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_200310.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200310)
bdAnac200311 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_200311.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200311)
bdAnac200312 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2003/VRA_200312.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200312)

#Carregando bases e concatenando bases 2004 

bdAnac20041 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_20041.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20041)
bdAnac20042 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_20042.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20042)
bdAnac20043 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_20043.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20043)
bdAnac20044 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_20044.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20044)
bdAnac20045 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_20045.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20045)
bdAnac20046 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_20046.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20046)
bdAnac20047 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_20047.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20047)
bdAnac20048 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_20048.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20048)
bdAnac20049 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_20049.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20049)
bdAnac200410 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_200410.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200410)
bdAnac200411 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_200411.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200411)
bdAnac200412 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2004/VRA_200412.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200412)

#Carregando bases e concatenando bases 2005 

bdAnac20051 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_20051.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20051)
bdAnac20052 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_20052.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20052)
bdAnac20053 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_20053.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20053)
bdAnac20054 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_20054.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20054)
bdAnac20055 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_20055.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20055)
bdAnac20056 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_20056.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20056)
bdAnac20057 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_20057.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20057)
bdAnac20058 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_20058.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20058)
bdAnac20059 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_20059.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20059)
bdAnac200510 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_200510.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200510)
bdAnac200511 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_200511.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200511)
bdAnac200512 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2005/VRA_200512.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200512)

#Carregando bases e concatenando bases 2006 

bdAnac20061 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_20061.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20061)
bdAnac20062 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_20062.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20062)
bdAnac20063 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_20063.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20063)
bdAnac20064 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_20064.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20064)
bdAnac20065 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_20065.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20065)
bdAnac20066 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_20066.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20066)
bdAnac20067 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_20067.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20067)
bdAnac20068 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_20068.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20068)
bdAnac20069 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_20069.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20069)
bdAnac200610 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_200610.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200610)
bdAnac200611 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_200611.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200611)
bdAnac200612 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2006/VRA_200612.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200612)

#Carregando bases e concatenando bases 2007 

bdAnac20071 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_20071.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20071)
bdAnac20072 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_20072.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20072)
bdAnac20073 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_20073.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20073)
bdAnac20074 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_20074.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20074)
bdAnac20075 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_20075.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20075)
bdAnac20076 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_20076.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20076)
bdAnac20077 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_20077.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20077)
bdAnac20078 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_20078.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20078)
bdAnac20079 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_20079.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20079)
bdAnac200710 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_200710.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200710)
bdAnac200711 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_200711.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200711)
bdAnac200712 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2007/VRA_200712.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200712)

#Carregando bases e concatenando bases 2008 

bdAnac20081 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_20081.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20081)
bdAnac20082 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_20082.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20082)
bdAnac20083 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_20083.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20083)
bdAnac20084 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_20084.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20084)
bdAnac20085 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_20085.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20085)
bdAnac20086 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_20086.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20086)
bdAnac20087 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_20087.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20087)
bdAnac20088 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_20088.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20088)
bdAnac20089 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_20089.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20089)
bdAnac200810 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_200810.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200810)
bdAnac200811 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_200811.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200811)
bdAnac200812 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2008/VRA_200812.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200812)

#Carregando bases e concatenando bases 2009 

bdAnac20091 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_20091.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20091)
bdAnac20092 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_20092.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20092)
bdAnac20093 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_20093.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20093)
bdAnac20094 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_20094.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20094)
bdAnac20095 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_20095.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20095)
bdAnac20096 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_20096.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20096)
bdAnac20097 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_20097.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20097)
bdAnac20098 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_20098.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20098)
bdAnac20099 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_20099.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20099)
bdAnac200910 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_200910.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200910)
bdAnac200911 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_200911.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200911)
bdAnac200912 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2009/VRA_200912.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac200912)

#Carregando bases e concatenando bases 2010 

bdAnac20101 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_20101.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20101)
bdAnac20102 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_20102.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20102)
bdAnac20103 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_20103.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20103)
bdAnac20104 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_20104.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20104)
bdAnac20105 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_20105.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20105)
bdAnac20106 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_20106.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20106)
bdAnac20107 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_20107.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20107)
bdAnac20108 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_20108.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20108)
bdAnac20109 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_20109.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20109)
bdAnac201010 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_201010.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201010)
bdAnac201011 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_201011.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201011)
bdAnac201012 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2010/VRA_201012.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201012)

#Carregando bases e concatenando bases 2011 

bdAnac20111 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_20111.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20111)
bdAnac20112 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_20112.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20112)
bdAnac20113 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_20113.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20113)
bdAnac20114 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_20114.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20114)
bdAnac20115 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_20115.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20115)
bdAnac20116 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_20116.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20116)
bdAnac20117 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_20117.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20117)
bdAnac20118 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_20118.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20118)
bdAnac20119 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_20119.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20119)
bdAnac201110 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_201110.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201110)
bdAnac201111 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_201111.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201111)
bdAnac201112 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2011/VRA_201112.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201112)

#Carregando bases e concatenando bases 2012 

bdAnac20121 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_20121.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20121)
bdAnac20122 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_20122.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20122)
bdAnac20123 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_20123.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20123)
bdAnac20124 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_20124.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20124)
bdAnac20125 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_20125.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20125)
bdAnac20126 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_20126.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20126)
bdAnac20127 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_20127.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20127)
bdAnac20128 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_20128.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20128)
bdAnac20129 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_20129.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20129)
bdAnac201210 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_201210.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201210)
bdAnac201211 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_201211.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201211)
bdAnac201212 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2012/VRA_201212.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201212)

#Carregando bases e concatenando bases 2013 

bdAnac20131 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_20131.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20131)
bdAnac20132 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_20132.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20132)
bdAnac20133 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_20133.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20133)
bdAnac20134 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_20134.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20134)
bdAnac20135 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_20135.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20135)
bdAnac20136 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_20136.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20136)
bdAnac20137 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_20137.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20137)
bdAnac20138 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_20138.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20138)
bdAnac20139 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_20139.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20139)
bdAnac201310 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_201310.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201310)
bdAnac201311 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_201311.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201311)
bdAnac201312 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2013/VRA_201312.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201312)

#Carregando bases e concatenando bases 2014 

bdAnac20141 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_20141.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20141)
bdAnac20142 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_20142.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20142)
bdAnac20143 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_20143.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20143)
bdAnac20144 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_20144.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20144)
bdAnac20145 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_20145.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20145)
bdAnac20148 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_20148.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20148)
bdAnac20149 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_20149.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20149)
bdAnac201410 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_201410.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201410)
bdAnac201411 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_201411.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201411)
bdAnac201412 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2014/VRA_201412.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201412)

#Carregando bases e concatenando bases 2015 

bdAnac20151 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_20151.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20151)
bdAnac20152 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_20152.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20152)
bdAnac20153 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_20153.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20153)
bdAnac20154 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_20154.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20154)
bdAnac20155 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_20155.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20155)
bdAnac20156 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_20156.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20156)
bdAnac20157 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_20157.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20157)
bdAnac20158 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_20158.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20158)
bdAnac20159 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_20159.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20159)
bdAnac201510 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_201510.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201510)
bdAnac201511 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_201511.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201511)
bdAnac201512 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2015/VRA_201512.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201512)

#Carregando bases e concatenando bases 2016

bdAnac20161 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_20161.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20161)
bdAnac20162 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_20162.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20162)
bdAnac20163 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_20163.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20163)
bdAnac20164 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_20164.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20164)
bdAnac20165 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_20165.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20165)
bdAnac20166 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_20166.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20166)
bdAnac20167 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_20167.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20167)
bdAnac20168 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_20168.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20168)
bdAnac20169 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_20169.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20169)
bdAnac201610 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_201610.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201610)
bdAnac201611 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_201611.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201611)
bdAnac201612 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2016/VRA_201612.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201612)

#Carregando bases e concatenando bases 2017

bdAnac20171 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_20171.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20171)
bdAnac20172 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_20172.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20172)
bdAnac20173 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_20173.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20173)
bdAnac20174 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_20174.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20174)
bdAnac20175 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_20175.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20175)
bdAnac20176 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_20176.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20176)
bdAnac20177 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_20177.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20177)
bdAnac20178 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_20178.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20178)
bdAnac20179 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_20179.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20179)
bdAnac201710 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_201710.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201710)
bdAnac201711 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_201711.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201711)
bdAnac201712 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2017/VRA_201712.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201712)

#Carregando bases e concatenando bases 2018

bdAnac20181 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_20181.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20181)
bdAnac20182 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_20182.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20182)
bdAnac20183 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_20183.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20183)
bdAnac20184 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_20184.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20184)
bdAnac20185 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_20185.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20185)
bdAnac20186 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_20186.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20186)
bdAnac20187 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_20187.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20187)
bdAnac20188 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_20188.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20188)
bdAnac20189 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_20189.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20189)
bdAnac201810 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_201810.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201810)
bdAnac201811 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_201811.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201811)
bdAnac201812 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2018/VRA_201812.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201812)

#Carregando bases e concatenando bases 2019 


bdAnac20191 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_20191.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20191)

bdAnac20192 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_20192.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20192)
bdAnac20193 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_20193.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20193)
bdAnac20194 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_20194.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20194)
bdAnac20195 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_20195.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20195)
bdAnac20196 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_20196.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20196)
bdAnac20197 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_20197.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20197)
bdAnac20198 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_20198.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20198)
bdAnac20199 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_20199.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20199)
bdAnac201910 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_201910.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201910)
bdAnac201911 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_201911.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201911)
bdAnac201912 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2019/VRA_201912.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac201912)

#Carregando bases e concatenando bases 2020 

bdAnac20201 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_20201.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20201)
bdAnac20202 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_20202.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20202)
bdAnac20203 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_20203.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20203)
bdAnac20204 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_20204.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20204)
bdAnac20205 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_20205.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20205)
bdAnac20206 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_20206.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20206)
bdAnac20207 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_20207.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20207)
bdAnac20208 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_20208.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20208)
bdAnac20209 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_20209.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac20209)
bdAnac202010 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_202010.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac202010)
bdAnac202011 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_202011.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac202011)
bdAnac202012 = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/2020/VRA_202012.csv' ,na_values='NaN', keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
bases.append(bdAnac202012)



base = pd.concat(bases,ignore_index=True)
print (base.shape)
base.head()

base = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/BaseAnac2000-2020.csv' ,na_values=0, keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python', encoding='latin-1')
base.head()

base = base.drop(columns=["Atualizado em: 2019-07-18","Atualizado em: 2019-07-22","Atualizado em: 2019-07-23","Atualizado em: 2019-09-09","Atualizado em: 2019-10-09","Atualizado em: 2019-11-25","Atualizado em: 2021-05-11","Atualizado em: 2020-07-10","Atualizado em: 2020-08-18"]) #Dropando colunas que n√£o serao utilizadas
base.head()

#base.to_csv(r'/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC\base.csv')   salvei tudo em um unico arquivo

# LER BASE NOVA DE TODOS OS ANOS SAINDO DO AEROPORTO DE CASCAVEEL

#baseFiltro = base[base["ICAO Aer√≥dromo Origem"]=="SBCA" ] #Filtrando base por aeroporto de origem de cascavel
baseFiltro.duplicated(keep='first')
baseFiltro.head(1000)

# SALVAR NOVA BASE O PARA CARREGAR DEPOIS
#baseFiltro.to_csv(r'/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC\base.csv')

#carregando nova base filtrada
baseFiltro = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/BaseAnac2000-2020Cvel.csv' ,keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python' , index_col ="Unnamed: 0" )
baseFiltro.infer_objects()
baseFiltro.head(1000)

baseFiltro.last

#print (baseFiltro.shape)
#subdividir partida prevista em dia/mes/ano ok
#tirar campos que n√£o ir√° usar ok
#se cancelado , partida real / chegada real = partida prevista/chegada prevista ok
#se realizado , partida prevista / chegada prevista = partida real/chegada real ok


baseFiltro = baseFiltro.drop(columns=["C√≥digo Autoriza√ß√£o (DI)","C√≥digo Tipo Linha","C√≥digo Justificativa"]) #Dropando colunas que n√£o serao utilizadas

#Criando novas colunas para receber os dados splitados
baseFiltro.insert(loc=4,  column ="Dia Partida", value="", allow_duplicates=False ) 
baseFiltro.insert(loc=5,  column ="Mes Partida", value="", allow_duplicates=False )
baseFiltro.insert(loc=6,  column ="Ano Partida", value="", allow_duplicates=False )
baseFiltro.insert(loc=7,  column ="Hora Partida", value="", allow_duplicates=False )

baseFiltro.insert(loc=10,  column ="Dia Chegada", value="", allow_duplicates=False )
baseFiltro.insert(loc=11,  column ="Mes Chegada", value="", allow_duplicates=False )
baseFiltro.insert(loc=12,  column ="Ano Chegada", value="", allow_duplicates=False )
baseFiltro.insert(loc=13,  column ="Hora Chegada", value="", allow_duplicates=False )

baseFiltro.head()

#Eliminando os valores vazios do DF e concatenando as colunas de partida/chegada previstas e reais
baseFiltro["Partida Real"] = np.where(baseFiltro["Partida Prevista"]!= "", baseFiltro["Partida Prevista"], baseFiltro["Partida Real"])
baseFiltro["Partida Prevista"] = np.where(baseFiltro["Partida Real"]!= "", baseFiltro["Partida Real"], baseFiltro["Partida Prevista"])
baseFiltro.rename(columns = {"Partida Real":"Partida"}, inplace = True) 
baseFiltro.head()

baseFiltro.head()
baseFiltro["Chegada Real"] = np.where(baseFiltro["Chegada Prevista"]!= "", baseFiltro["Chegada Prevista"], baseFiltro["Chegada Real"])
baseFiltro["Chegada Prevista"] = np.where(baseFiltro["Chegada Real"]!= "", baseFiltro["Chegada Real"], baseFiltro["Chegada Prevista"])
baseFiltro.rename(columns = {"Chegada Real":"Chegada"}, inplace = True)
baseFiltro.head()

baseFiltro = baseFiltro.drop(columns=["Partida Prevista","Chegada Prevista"]) #Dropando colunas que n√£o serao usadas

#Splitando os valores de partida em dia , mes , ano e hora

baseFiltro[["Dia Partida","Mes Partida","Ano Partida"]]=baseFiltro["Partida"].str.split('/',expand=True)
baseFiltro[["Ano Partida","Hora Partida"]]=baseFiltro["Ano Partida"].str.split(expand=True)

baseFiltro.insert(loc=7,  column ="Hora Partida 1", value="", allow_duplicates=False )
baseFiltro.insert(loc=8,  column ="Hora Partida 2", value="", allow_duplicates=False )  
baseFiltro[["Hora Partida 1","Hora Partida 2"]]=baseFiltro["Hora Partida"].str.split(":",expand=True)


baseFiltro[["Dia Chegada","Mes Chegada","Ano Chegada"]]=baseFiltro["Chegada"].str.split('/',expand=True)
baseFiltro[["Ano Chegada","Hora Chegada"]]=baseFiltro["Ano Chegada"].str.split(expand=True)

baseFiltro.insert(loc=13,  column ="Hora Chegada 1", value="", allow_duplicates=False ) 
baseFiltro.insert(loc=14,  column ="Hora Chegada 2", value="", allow_duplicates=False ) 
baseFiltro[["Hora Chegada 1","Hora Chegada 2"]]=baseFiltro["Hora Chegada"].str.split(":",expand=True)

#transformando colunas em int
#baseFiltro.astype({"Hora Partida 1": 'string'}).dtypes
#baseFiltro.astype({"Hora Partida 2": 'string'}).dtypes
#baseFiltro.astype({"Hora Partida 1": 'int32'}).dtypes
#baseFiltro.astype({"Hora Partida 2": 'int32'}).dtypes

#pd.to_numeric(baseFiltro["Hora Partida 1"] , errors='ignore')
#pd.to_numeric(baseFiltro["Hora Partida 2"] , errors='ignore')
#pd.to_numeric(baseFiltro["Hora Chegada 1"] , errors='ignore')
#pd.to_numeric(baseFiltro["Hora Chegada 1"] , errors='ignore') #baseFiltro["Hora Partida 1"] = baseFiltro["Hora Partida 1"].astype(str).astype("int")
#baseFiltro["Hora Partida 2"] = baseFiltro["Hora Partida 2"].astype(str).astype("int")

#baseFiltro["Hora Chegada 1"] = baseFiltro["Hora Chegada 1"].astype(str).astype("int")
#baseFiltro["Hora Chegada 2"] = baseFiltro["Hora Chegada 2"].astype(str).astype("int")

#baseFiltro.astype({"Hora Chegada 1": 'string'}).dtypes
#baseFiltro.astype({"Hora Chegada 2": 'string'}).dtypes
#baseFiltro.astype({"Hora Chegada 1": 'int32'}).dtypes
#baseFiltro.astype({"Hora Chegada 2": 'int32'}).dtypes

#Transformando em minutos 
baseFiltro["Hora Partida"] = np.where(baseFiltro["Hora Partida 1"]== 00, (baseFiltro["Hora Partida 2"].astype("double")), ((baseFiltro["Hora Partida 1"].astype("double")*60)+(baseFiltro["Hora Partida 2"].astype("double"))))
baseFiltro["Hora Chegada"] = np.where(baseFiltro["Hora Chegada 1"]== 00, (baseFiltro["Hora Chegada 2"].astype("double")), ((baseFiltro["Hora Chegada 1"].astype("double")*60)+(baseFiltro["Hora Chegada 2"].astype("double"))))
baseFiltro.rename(columns = {"Hora Partida":"Hora Partida Minutos"}, inplace = True)
baseFiltro.rename(columns = {"Hora Chegada":"Hora Chegada Minutos"}, inplace = True)

#Dropando colunas que n√£o ser√£o usadas

baseFiltro = baseFiltro.drop(columns=["Partida","Chegada"])
baseFiltro = baseFiltro.drop(columns=["Hora Partida 1","Hora Partida 2","Hora Chegada 1","Hora Chegada 2"])

#baseFiltro["Hora Partida Minutos"] = baseFiltro["Hora Partida Minutos"].astype("int32")
#baseFiltro["Hora Chegada Minutos"] = baseFiltro["Hora Chegada Minutos"].astype("int32")
#pd.to_timedelta(baseFiltro["Hora Partida"], unit='m')
#pd.to_timedelta(baseFiltro["Hora Chegada"], unit='m')

baseFiltro.head()
#baseFiltro.dtypes


#baseFiltro.shape

# colunas que influenciam na situa√ß√£o de voo : empresa aerea , aerodromo destino , dia , mes , hora partida - entradas
# situa√ß√£o de voo - saida
# variaveis qualitativas : empresa aerea , aerodromo destino
# variaveis quantitativas : dia,mes,hora partida

#Salvando a base de dados na sua ultima versao novamente para carregala para arvore de decis√µes
baseFiltro.to_csv(r'/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/BaseAnac2000-2020CvelFinal.csv')

#Para carregar novo CSV com os dados tratados



baseFiltro = pd.read_csv('/content/drive/Shareddrives/Tcc2021Rafael/data/ANAC/BaseAnac2000-2020CvelFinal.csv' ,keep_default_na=False, quoting=csv.QUOTE_NONE, error_bad_lines=False,  engine='python' , index_col ="Unnamed: 0" )
baseFiltro.head()

#Hora Partidas Minutos e Hora Chegada Minutos contam os minutos a partir das 00 horas.

#baseFiltro.info()

baseFiltro["Mes Partida"].unique()

baseFiltro = baseFiltro[baseFiltro["Mes Partida"]!=""]
# Ver se na base original existem os valores

baseFiltrox = baseFiltro[baseFiltro["Mes Partida"]!=""]

baseFiltro["Mes Partida"].unique()

baseFiltro["Dia Partida"].astype("int64")
baseFiltro["Mes Partida"].astype("int64")
baseFiltro["Ano Partida"].astype("int64")

baseFiltro["Dia Chegada"].astype("int64")
baseFiltro["Mes Chegada"].astype("int64")
baseFiltro["Ano Chegada"].astype("int64")

baseFiltro["ICAO Empresa A√©rea"].astype("string")
baseFiltro["N√∫mero Voo"].astype("int64")
baseFiltro["ICAO Aer√≥dromo Origem"].astype("string")
baseFiltro["ICAO Aer√≥dromoo Destino"].astype("string")

baseFiltro["Situa√ß√£o Voo"].astype("string")

baseFiltro.dtypes

##Implementando Arvore de Decis√£o !

from sklearn import tree


# Vari√°veis
alvo = 'Situa√ß√£o Voo' #vari√°vel alvo
target = baseFiltro[alvo] #Separa a vari√°vel alvo


#Variaveis Dummy
baseFiltroquali = ['ICAO Empresa A√©rea', 'ICAO Aer√≥dromoo Destino','Mes Partida','Dia Partida'] #Vari√°veis qualitativas
dfQuali = pd.get_dummies(baseFiltro[baseFiltroquali])

baseFiltroquant = ['Hora Partida Minutos','Hora Chegada Minutos'] #Vari√°veis quantitativas
dfQuant = baseFiltro[baseFiltroquant] #Dataframe com quantitativas
dfWork = pd.concat([dfQuali, dfQuant], axis=1) #Dataframe com todas vari√°veis


 
# √Årvore
arv = tree.DecisionTreeClassifier() #√°rvore de decis√£o
# arv = tree.DecisionTreeRegressor()  #√°rvore de regress√£o
arv.fit(dfWork, target) #cria a √°rvore
 
# Teste

from sklearn.model_selection import train_test_split 
dfWork_train, dfWork_test = train_test_split(dfWork,  train_size=0.7)

from sklearn.model_selection import train_test_split 
dfWork_train, dfWork_test, target_train, target_test = train_test_split(dfWork, target, train_size=0.7)

from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

dfWork_train, dfWork_test, target_train, target_test = train_test_split(
dfWork, target, train_size=0.7, random_state=42
)

print('O dataset de treino possui {} voos e o de teste {} voos.'.format(dfWork_train.shape[0], dfWork_test.shape[0]))

rfc = RandomForestClassifier()
rfc.fit(dfWork_train, target_train)

rfc.feature_importances_

for feature,importancia in zip(dfWork.columns,rfc.feature_importances_):
    print("{}:{} %".format(feature, (importancia)*100))

target_pred=rfc.predict(dfWork_test)

target_pred

from sklearn import metrics
print(metrics.classification_report(target_test,target_pred))

from sklearn.metrics import accuracy_score, recall_score, confusion_matrix , f1_score , precision_score

#target_test = target_test.map({'REALIZADO': 1, 'CANCELADO': 0}).astype(int)
#recall_average = recall_score(target_test, target_pred, average="binary", pos_label='REALIZADO') 

#print(accuracy_score(target_test,target_pred))
#print(recall_score(target_test,target_pred))
#print(confusion_matrix(target_test,target_pred))


print("A acur√°cia foi de {:.2f}%.".format(accuracy_score(target_test,target_pred)*100))

print("A precis√£o foi de {:.2f}%.".format(precision_score(target_test,target_pred,pos_label = 'REALIZADO')*100))

print("O Score de Recall foi de {:.2f}%.\n".format(recall_score(target_test,target_pred,pos_label='REALIZADO')*100))

print("O Score de F1 foi de {:.2f}%.\n".format(f1_score(target_test,target_pred,pos_label='REALIZADO')*100))

print ("Matriz de confus√£o : ")
print(confusion_matrix(target_test,target_pred))

dfWork_test.head()

pd.Series(target_pred).value_counts()

CM =confusion_matrix(target_test,target_pred)

# Visualize it as a heatmap
import seaborn as sns
sns.heatmap(CM)
plt.show()

ax = sns.heatmap(CM/np.sum(CM), annot=True, 
            fmt='.2%', cmap='Blues')

ax.set_title('Seaborn Confusion Matrix with labels\n\n');
ax.set_xlabel('\nPredicted Values')
ax.set_ylabel('Actual Values ');

## Ticket labels - List must be in alphabetical order
ax.xaxis.set_ticklabels(['False','True'])
ax.yaxis.set_ticklabels(['False','True'])

## Display the visualization of the Confusion Matrix.
plt.show()

group_names = ['Negativo','Falso Positivo','Falso Negativo','Positivo']

group_counts = ["{0:0.0f}".format(value) for value in
                CM.flatten()]

group_percentages = ["{0:.2%}".format(value) for value in
                     CM.flatten()/np.sum(CM)]

labels = [f"{v1}\n{v2}\n{v3}" for v1, v2, v3 in
          zip(group_names,group_counts,group_percentages)]

labels = np.asarray(labels).reshape(2,2)

ax = sns.heatmap(CM, annot=labels, fmt='', cmap='Reds')

ax.set_title('Matriz de Confus√£o - Predi√ß√µes de v√¥o\n\n');
ax.set_xlabel('\nValores Previstos')
ax.set_ylabel('Valores Atuais');

## Ticket labels - List must be in alphabetical order
ax.xaxis.set_ticklabels(['Falso','Verdadeiro'])
ax.yaxis.set_ticklabels(['Falso','Verdadeiro'])

## Display the visualization of the Confusion Matrix.
plt.show()

"""Criar dataframe com linha para teste de data futura.

target_pred=rfc.predict(dfWork_test) - fazer predict com dataframe com a linha teste incluida para ver resultados
"""

predicao_teste = baseFiltro[baseFiltro.index == 16283215]

predicao_teste.loc[16283215,'ICAO Empresa A√©rea'] =  'ITB'
predicao_teste.loc[16283215,'N√∫mero Voo'] = 6000
predicao_teste.loc[16283215,'ICAO Aer√≥dromoo Destino'] =  'SBCT'
predicao_teste.loc[16283215,'Dia Partida'] =  25
predicao_teste.loc[16283215,'Mes Partida'] =  10
predicao_teste.loc[16283215,'Ano Partida'] =  2021
predicao_teste.loc[16283215,'Hora Partida Minutos'] =  380.0
predicao_teste.loc[16283215,'Dia Chegada'] =  25
predicao_teste.loc[16283215,'Mes Chegada'] = 10
predicao_teste.loc[16283215,'Ano Chegada'] =  21
predicao_teste.loc[16283215,'Hora Chegada Minutos'] =  500.0
predicao_teste.loc[16283215,'Situa√ß√£o Voo'] =  'REALIZADO'



#predicao_teste = pd.DataFrame(predicao_teste, columns = ['ICAO Empresa A√©rea', 'N√∫mero Voo',   'ICAO Aer√≥dromo Origem' ,'ICAO Aer√≥dromoo Destino'  ,'Dia Partida'  ,'Mes Partida', 'Ano Partida',  'Hora Partida Minutos', 'Dia Chegada',  'Mes Chegada',  'Ano Chegada',  'Hora Chegada Minutos', 'Situa√ß√£o Voo'])

#[ 'ITB','3500','SBCA','SBCT','25','10','2021','1210.0','26','10','2021','1327.0','REALIZADO']

#predicao_teste.head(100)
#predicao_teste.info
predicao_teste.head(100)

predicao_teste.head()

#predicao_teste.loc[0:13['ICAO Empresa A√©rea','N√∫mero Voo','ICAO Aer√≥dromo Origem','ICAO Aer√≥dromoo Destin','Dia Partida','Mes Partida','Ano Partida','Hora Partida Minutos','Dia Chegada','Mes Chegada','Ano Chegada	','Hora Chegada Minutos','Situa√ß√£o Voo']] = ['AZU',6000,'SBCA','SBCT',25,10,2021,1400.0,26,10,2021,1600.0,'REALIZADO']

predicao_teste.dtypes

#Variaveis Dummy
predicao_testequali = ['ICAO Empresa A√©rea', 'ICAO Aer√≥dromoo Destino','Mes Partida','Dia Partida'] #Vari√°veis qualitativas
dfQualiPredicao = pd.get_dummies(predicao_teste[predicao_testequali])


# Vari√°veis
alvoPred = 'Situa√ß√£o Voo' #vari√°vel alvo
targetPredx = predicao_teste[alvoPred] #Separa a vari√°vel alvo

predicao_testequant = ['Hora Partida Minutos','Hora Chegada Minutos'] #Vari√°veis quantitativas
dfQuantPredicao = predicao_teste[predicao_testequant] #Dataframe com quantitativas
dfWorkPredicao = pd.concat([dfQualiPredicao, dfQuantPredicao], axis=1) #Dataframe com todas vari√°veis

dfWork.head()

dfWorkPredicao.head()

"""parei aqui

#A partir desse ponto est√° em processo para tentar tunar os resultados utilizando gridsearch.
"""

from sklearn.model_selection import GridSearchCV
from sklearn.ensemble import RandomForestClassifier

param_grid = {
    "max_depth": [4, 5, 6],
    "max_features": ["auto", "sqrt"],
    "n_estimators": [20, 50, 100]
}

cf = RandomForestClassifier()
cf_cv = GridSearchCV(estimator=cf, param_grid=param_grid, cv=3)
cf_cv.fit(dfWork_train, target_train)

cf_cv.best_params_

{'max_depth': 6,
 'max_features': 'auto',
 'n_estimators': 100}

rfc1=RandomForestClassifier(random_state=42, max_features='auto', n_estimators= 100, max_depth=6)

RandomForestClassifier().get_params().keys()

from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import GridSearchCV
from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline



# PARAMETROS DO PIPELINE (TRANSFORMACOES QUE QUEREMOS)
imputer = SimpleImputer(strategy="median")
scaler = StandardScaler()
#rf = RandomForestClassifier()

# SELECAO DE VARIAVEIS

# features = dfWork

# X = enem[features]
# y = enem[["IN_TREINEIRO"]]

# DIVIDE EM TREINO E TESTE
dfWork_train2, dfWork_test2, target_train2, target_test2 = train_test_split(
dfWork, target, train_size=0.7, random_state=42
)

# CRIA PIPELINE
pipeline = make_pipeline(imputer, scaler, rfc1)

# PARAMETROS PARA TUNAR
pipe_params = {
"randomforestclassifier__n_estimators": [100, 500, 1000],
"randomforestclassifier__max_depth": [1, 5, 10, 25],
"randomforestclassifier__max_features": [*np.arange(0.1, 1.1, 0.1)],
}

#APLICA GRIDSEARCH
gridsearch = GridSearchCV(
pipeline, param_grid=pipe_params, cv=3
)

# TREINA O MODELO PARA CHECAR QUAL MELHOR PARAMETRO
gridsearch.fit(dfWork_train2, target_train2)

# SCORE DO MODELO
print(gridsearch.score(dfWork_train2, target_train2))

gridsearch.feature_importances_

for feature2,importancia2 in zip(dfWork.columns,gridsearch.feature_importances_):
    print("{}:{} %".format(feature2, (importancia2)*100))

target_pred2=gridsearch.predict(dfWork_test2)

target_pred2

from sklearn import metrics
print(metrics.classification_report(target_test2,target_pred2))

from sklearn.metrics import accuracy_score, recall_score, confusion_matrix

#target_test = target_test.map({'REALIZADO': 1, 'CANCELADO': 0}).astype(int)
#recall_average = recall_score(target_test, target_pred, average="binary", pos_label='REALIZADO') 

#print(accuracy_score(target_test,target_pred))
#print(recall_score(target_test,target_pred))
#print(confusion_matrix(target_test,target_pred))


print("A acur√°cia foi de {:.2f}%.".format(accuracy_score(target_test2,target_pred2)*100))

print("O Score de Recall foi de {:.2f}%.\n".format(recall_score(target_test2,target_pred2,pos_label='REALIZADO')*100))

print ("Matriz de confus√£o : ")
print(confusion_matrix(target_test2,target_pred2))

"""Fazer : 
- Retirar o ano do treinamento - ok
- Definir vari√°veis quantitativas - ok
- Realizar teste - ok
- Separar base em treino e teste (70% treino e 30% teste) 
- Fazer testes e observar matriz de confus√£o ( Pesquisar matriz de confus√£o)
- Aplicar Random Forest
- Realizar testes com valores futuros
- Observar vari√°veis que mais influenciam no cancelamento de v√¥os

"""

# Visualize a √°rvore (passo n√£o obrigat√≥rio)
import graphviz
dot_data = tree.export_graphviz(arv, 
                        feature_names=dfWork.columns,  #vari√°veis
                        class_names=arv.classes_,      #valores dos resultados
                        out_file=None,                 #Arquivo de sa√≠da
                        #configura√ß√µes dos n√≥s
                        filled=True, rounded=True,     
                        special_characters=True)  
graph = graphviz.Source(dot_data)  
graph



